- yum: name={{ item }}
  with_items:
  - unzip
- stat: path=/var/lib/eucalyptus/db/data/PG_VERSION
  register: result
- service: name=eucalyptus-cloud state=stopped
  when: not result.stat.exists
- shell: clcadmin-initialize-cloud
  when: not result.stat.exists
- service: name=eucalyptus-cloud state=stopped enabled=yes
# Backup
- file: path=~/euca_db_backup state=directory
- shell: pg_dumpall -c -o -h /var/lib/eucalyptus/db/data -U root -p 8777 | gzip > ~/euca_db_backup/eucalyptus-database-$(date +%Y%m%d-%H%M%S).sql.gz
- shell: tar -czvf ~/euca_db_backup/eucalyptus-keysdir-$(date +%Y%m%d-%H%M%S).tgz /var/lib/eucalyptus/keys
- shell: tar -czvf ~/euca_db_backup/eucalyptus-etcdir-$(date +%Y%m%d-%H%M%S).tgz /etc/eucalyptus
# Start
- service: name=eucalyptus-cloud state=restarted enabled=yes
- wait_for: port=8443 #eucalyptus-cloud
- wait_for: port=8773 #eucalyptus-cloud
- wait_for: port=8777 #postgres
- synchronize: mode=pull src=/var/lib/eucalyptus/keys/* dest=templates/keys/ checksum=yes recursive=yes
  tags: always
- action: shell clcadmin-assume-system-credentials > ~/sysrc && echo "export AWS_DEFAULT_REGION=localhost" >> ~/sysrc
  register: result
  until: result.rc == 0
  retries: 10
  delay: 5
- action: shell source ~/sysrc && euserv-describe-services --filter="service-type=user-api" | grep 'enabled *$'
  register: result
  until: result.rc == 0
  retries: 20
  delay: 10
- name: Set euctl properties
  shell: source ~/sysrc; euctl "{{ item }}={{ euctl_set[item] }}"
  with_items: "{{ euctl_set.keys() }}"
# Post-installation
- include: ../../../tasks/awscli.yml
- include: ../../../tasks/eucacli.yml
# Networking config
- copy: src=templates/mido/network.json dest=~/network.json
- shell: euctl cloud.network.network_configuration=@network.json
- service: name=eucanetd state=stopped enabled=yes
- shell: eucanetd -f || true
- shell: eucanetd -F || true
- service: name=eucanetd state=restarted enabled=yes
